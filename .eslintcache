[{"C:\\Users\\pc\\Desktop\\memory game\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\memory game\\src\\App.js":"2","C:\\Users\\pc\\Desktop\\memory game\\src\\game.js":"3","C:\\Users\\pc\\Desktop\\memory game\\src\\Home.js":"4","C:\\Users\\pc\\Desktop\\memory game\\src\\login.js":"5","C:\\Users\\pc\\Desktop\\memory game 2\\React-memory-Game\\src\\index.js":"6","C:\\Users\\pc\\Desktop\\memory game 2\\React-memory-Game\\src\\App.js":"7"},{"size":239,"mtime":1638812869383,"results":"8","hashOfConfig":"9"},{"size":1378,"mtime":1639752582280,"results":"10","hashOfConfig":"9"},{"size":25330,"mtime":1639697781253,"results":"11","hashOfConfig":"9"},{"size":1260,"mtime":1639696308282,"results":"12","hashOfConfig":"9"},{"size":2529,"mtime":1639694517501,"results":"13","hashOfConfig":"9"},{"size":280,"mtime":1655150753375,"results":"14","hashOfConfig":"15"},{"size":7478,"mtime":1657290245964,"results":"16","hashOfConfig":"15"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1h2q50h",{"filePath":"20","messages":"21","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},"x7p2b2",{"filePath":"35","messages":"36","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\pc\\Desktop\\memory game\\src\\index.js",[],["37","38"],"C:\\Users\\pc\\Desktop\\memory game\\src\\App.js",["39","40","41","42","43","44","45"],"C:\\Users\\pc\\Desktop\\memory game\\src\\game.js",["46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"import { useEffect, useRef, useState } from \"react\";\r\nimport { signOut } from '@firebase/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { getAuth } from '@firebase/auth';\r\nimport { onAuthStateChanged } from '@firebase/auth';\r\nimport {doc , getDoc , getDocs , collection , setDoc} from \"@firebase/firestore\" \r\n    let array = [{\r\n        back : \"./img/—Pngtree—cartoon bee clipart_4160541.png\" , \r\n        style : {transform:\"rotateY(0)\" } , \r\n        mathcNumber : 1 , \r\n        id : 1\r\n    } , {\r\n        back : \"./img/—Pngtree—cartoon bee clipart_4160541.png\" , \r\n        style:{transform:\"rotateY(0)\" } , \r\n        mathcNumber : 1 , \r\n        id : 2\r\n    } ,\r\n    {\r\n        back : \"./img/angular-14a0f6532f.png\" , \r\n        style:{transform:\"rotateY(0)\" } , \r\n        mathcNumber : 2 , \r\n        id : 3\r\n    }\r\n,{\r\n    back : \"./img/angular-14a0f6532f.png\" , \r\n    style:{transform:\"rotateY(0)\" } , \r\n    mathcNumber : 2 , \r\n    id : 4\r\n},{\r\n    back : \"./img/—Pngtree—2022 poster_6681272.png\" , \r\n    style:{transform:\"rotateY(0)\"} , \r\n    mathcNumber : 3 , \r\n    id : 5\r\n},\r\n{\r\n    back : \"./img/—Pngtree—2022 poster_6681272.png\" , \r\n    style:{transform:\"rotateY(0)\"} , \r\n    mathcNumber : 3 , \r\n    id : 6\r\n},\r\n{\r\n    back : \"./img/2cd43b_b13c89d3859a48129a434265b3ddd1a1_mv2_d_1826_1920_s_2.png\" , \r\n    style:{transform:\"rotateY(0)\"} , \r\n    mathcNumber : 4 , \r\n    id : 7\r\n},\r\n{\r\n    back : \"./img/2cd43b_b13c89d3859a48129a434265b3ddd1a1_mv2_d_1826_1920_s_2.png\" , \r\n    style:{transform:\"rotateY(0)\" } , \r\n    mathcNumber : 4 , \r\n    id : 8\r\n},\r\n{\r\n    back : \"./img/1200px-Vue.js_Logo_2.svg.webp\" , \r\n    style:{transform:\"rotateY(0)\" } , \r\n    mathcNumber : 5 , \r\n    id : 9\r\n},\r\n{\r\n    back : \"./img/1200px-Vue.js_Logo_2.svg.webp\" , \r\n    style:{transform:\"rotateY(0)\"} , \r\n    mathcNumber : 5 , \r\n    id : 10\r\n},\r\n{\r\n    back : \"./img/images.jpg\" , \r\n    style:{transform:\"rotateY(0)\"} , \r\n    mathcNumber : 6 , \r\n    id : 11\r\n},\r\n{\r\n    back : \"./img/images.jpg\" , \r\n    style:{transform:\"rotateY(0)\" } , \r\n    mathcNumber : 6 , \r\n    id : 12\r\n},\r\n{\r\n    back : \"./img/images.png\" , \r\n    style:{transform:\"rotateY(0)\" } , \r\n    mathcNumber : 7 , \r\n    id : 13\r\n},\r\n{\r\n    back : \"./img/images.png\" , \r\n    style:{transform:\"rotateY(0)\" } , \r\n    mathcNumber : 7 , \r\n    id : 14\r\n},\r\n{\r\n    back : \"./img/download.png\" , \r\n    style:{transform:\"rotateY(0)\" } , \r\n    mathcNumber : 8 , \r\n    id : 15\r\n},\r\n{\r\n    back : \"./img/download.png\" , \r\n    style:{transform:\"rotateY(0)\" } , \r\n    mathcNumber : 8 , \r\n    id : 16\r\n},\r\n{\r\n    back : \"./img/shining-circle-purple-lighting-isolated-dark-background_1441-2396.webp\" , \r\n    style:{transform:\"rotateY(0)\" } , \r\n    mathcNumber : 9 , \r\n    id : 17\r\n},\r\n{\r\n    back : \"./img/shining-circle-purple-lighting-isolated-dark-background_1441-2396.webp\" , \r\n    style:{transform:\"rotateY(0)\" } , \r\n    mathcNumber : 9 , \r\n    id : 18\r\n},\r\n{\r\n    back : \"./img/—Pngtree—cartoon tree_230886.png\" , \r\n    style:{transform:\"rotateY(0)\" } , \r\n    mathcNumber : 10 , \r\n    id : 19\r\n},\r\n{\r\n    back : \"./img/—Pngtree—cartoon tree_230886.png\" , \r\n    style:{transform:\"rotateY(0)\" } , \r\n    mathcNumber : 10 , \r\n    id : 20\r\n}]\r\n\r\n\r\nlet randomPatternArray =[[5, 14, 2, 19, 11, 10, 8, 1, 13, 18, 12, 6, 16, 9, 3, 4, 17, 7, 0, 15]\r\n[18, 0, 12, 13, 5, 6, 4, 14, 11, 2, 8, 19, 9, 1, 15, 7, 10, 16, 3, 17],\r\n[0, 5, 15, 11, 10, 9, 18, 1, 16, 14, 12, 7, 13, 6, 3, 8, 17, 19, 4, 2],\r\n[14, 1, 10, 15, 0, 5, 2, 9, 8, 12, 11, 3, 6, 16, 4, 13, 7, 17, 18, 19],\r\n[7, 17, 8, 4, 19, 11, 6, 3, 5, 15, 10, 12, 13, 9, 1, 18, 0, 14, 16, 2],\r\n[8, 13, 7, 17, 14, 0, 16, 6, 11, 9, 4, 1, 5, 18, 10, 2, 12, 15, 3, 19],\r\n[3, 13, 11, 7, 19, 12, 8, 10, 15, 2, 14, 0, 9, 18, 17, 16, 1, 6, 5, 4],\r\n[9, 18, 12, 4, 19, 2, 1, 0, 14, 3, 10, 7, 16, 13, 15, 6, 8, 17, 5, 11],\r\n[9, 12, 7, 8, 3, 0, 13, 16, 10, 18, 2, 5, 6, 15, 4, 19, 14, 11, 1, 17],\r\n[17, 7, 6, 12, 8, 11, 18, 10, 16, 4, 1, 5, 19, 9, 14, 0, 2, 3, 13, 15],\r\n[4, 9, 6, 5, 17, 19, 1, 8, 11, 13, 12, 3, 0, 7, 18, 16, 10, 15, 14, 2],\r\n[12, 3, 14, 9, 16, 18, 17, 15, 6, 13, 0, 10, 11, 2, 5, 8, 19, 7, 4, 1],\r\n[5, 4, 8, 7, 17, 2, 15, 13, 12, 16, 10, 1, 11, 19, 14, 9, 3, 6, 0, 18],\r\n[13, 10, 14, 15, 3, 11, 2, 16, 19, 0, 4, 7, 9, 8, 12, 17, 18, 5, 6, 1],\r\n[14, 7, 2, 10, 17, 13, 18, 8, 19, 12, 11, 6, 9, 1, 4, 3, 16, 5, 15, 0],\r\n[7, 13, 0, 16, 18, 1, 15, 8, 17, 4, 9, 2, 5, 11, 12, 6, 10, 3, 19, 14],\r\n[17, 16, 14, 11, 12, 19, 7, 8, 18, 5, 2, 6, 4, 3, 9, 13, 15, 0, 1, 10],\r\n[18, 16, 17, 0, 2, 3, 5, 13, 4, 15, 12, 11, 7, 6, 10, 9, 14, 1, 19, 8],\r\n[0, 4, 1, 6, 5, 17, 8, 19, 2, 18, 10, 7, 9, 12, 11, 14, 3, 13, 16, 15],\r\n[17, 3, 9, 18, 8, 12, 13, 0, 6, 16, 15, 4, 11, 5, 19, 10, 7, 1, 14, 2],\r\n[13, 8, 17, 6, 2, 18, 11, 5, 19, 0, 12, 4, 10, 15, 1, 14, 16, 3, 7, 9],\r\n[5, 18, 0, 4, 8, 12, 9, 16, 2, 17, 7, 6, 19, 13, 3, 10, 14, 15, 11, 1],\r\n[6, 11, 19, 17, 12, 0, 1, 18, 7, 16, 15, 9, 8, 2, 3, 13, 14, 5, 4, 10],\r\n[15, 14, 17, 9, 2, 18, 10, 8, 3, 4, 13, 16, 11, 19, 7, 1, 12, 0, 5, 6],\r\n[0, 1, 12, 6, 2, 10, 17, 8, 5, 7, 11, 16, 3, 4, 9, 19, 18, 15, 13, 14],\r\n[2, 4, 18, 6, 5, 3, 16, 1, 11, 0, 9, 14, 13, 15, 12, 8, 17, 10, 19, 7],\r\n[19, 17, 13, 1, 8, 9, 14, 10, 18, 15, 2, 12, 0, 6, 16, 7, 11, 3, 4, 5],\r\n[12, 17, 3, 1, 8, 9, 13, 10, 18, 15, 5, 0, 14, 11, 4, 19, 16, 2, 6, 7],\r\n[13, 5, 12, 3, 15, 4, 2, 19, 17, 9, 10, 0, 8, 16, 7, 14, 1, 18, 6, 11],\r\n[15, 2, 6, 1, 0, 3, 5, 9, 18, 8, 17, 12, 16, 13, 11, 7, 14, 10, 19, 4],\r\n[8, 12, 14, 3, 5, 11, 17, 1, 9, 6, 18, 10, 15, 4, 0, 2, 16, 13, 19, 7],\r\n[5, 14, 9, 6, 3, 8, 17, 13, 16, 15, 1, 12, 0, 4, 11, 7, 19, 18, 2, 10],\r\n[9, 0, 12, 6, 8, 18, 1, 19, 3, 13, 10, 17, 11, 7, 15, 5, 14, 2, 16, 4],\r\n[9, 8, 17, 0, 1, 4, 19, 5, 3, 12, 13, 15, 6, 14, 18, 10, 11, 2, 16, 7],\r\n[5, 1, 0, 18, 17, 16, 10, 3, 8, 6, 12, 11, 19, 2, 13, 15, 7, 14, 4, 9],\r\n[12, 13, 3, 6, 1, 2, 15, 4, 5, 9, 17, 11, 16, 8, 18, 19, 0, 14, 10, 7],\r\n[19, 18, 2, 16, 5, 13, 10, 0, 8, 12, 7, 6, 1, 9, 15, 4, 11, 3, 14, 17],\r\n[9, 19, 18, 17, 15, 6, 10, 4, 7, 14, 5, 11, 0, 3, 2, 16, 1, 13, 8, 12],\r\n[1, 15, 3, 0, 10, 4, 11, 2, 16, 9, 12, 5, 17, 19, 7, 18, 13, 6, 8, 14],\r\n[1, 10, 7, 16, 5, 4, 9, 2, 13, 11, 6, 17, 14, 8, 18, 3, 12, 19, 15, 0],\r\n[3, 14, 1, 2, 9, 0, 18, 10, 16, 6, 15, 11, 8, 19, 17, 13, 12, 5, 7, 4],\r\n[1, 7, 5, 13, 2, 9, 12, 18, 6, 3, 14, 10, 17, 0, 16, 11, 15, 4, 19, 8],\r\n[10, 7, 3, 9, 4, 18, 2, 5, 1, 16, 8, 12, 14, 6, 19, 17, 0, 13, 15, 11],\r\n[9, 10, 12, 4, 7, 16, 5, 8, 13, 6, 0, 18, 15, 17, 3, 11, 1, 2, 19, 14],\r\n[2, 1, 13, 7, 15, 4, 6, 16, 12, 9, 3, 0, 11, 5, 17, 14, 19, 18, 10, 8],\r\n[19, 5, 7, 18, 17, 16, 6, 10, 3, 4, 2, 15, 9, 14, 11, 8, 12, 0, 13, 1],\r\n[5, 14, 13, 3, 17, 1, 16, 18, 9, 15, 6, 7, 2, 0, 10, 19, 4, 11, 12, 8],\r\n[8, 4, 16, 19, 14, 7, 13, 12, 0, 18, 2, 17, 10, 6, 9, 11, 5, 3, 15, 1],\r\n[9, 15, 18, 7, 14, 10, 1, 2, 11, 6, 17, 3, 4, 5, 16, 8, 19, 12, 0, 13],\r\n[3, 14, 9, 6, 13, 1, 8, 4, 18, 12, 0, 5, 17, 7, 11, 15, 10, 19, 16, 2],\r\n[19, 16, 1, 15, 10, 0, 9, 11, 4, 7, 14, 2, 13, 17, 8, 6, 18, 12, 5, 3],\r\n[12, 5, 9, 19, 8, 16, 7, 18, 11, 2, 17, 14, 3, 15, 0, 6, 13, 1, 10, 4],\r\n[10, 18, 0, 2, 6, 4, 16, 5, 19, 11, 1, 13, 17, 8, 14, 3, 15, 12, 9, 7],\r\n[19, 17, 10, 9, 8, 15, 12, 16, 0, 2, 18, 11, 4, 1, 7, 13, 3, 14, 6, 5],\r\n[10, 19, 7, 13, 0, 1, 18, 9, 3, 17, 2, 6, 4, 14, 8, 12, 16, 5, 11, 15],\r\n[11, 15, 9, 7, 10, 2, 3, 6, 17, 13, 5, 16, 0, 8, 14, 18, 19, 1, 12, 4],\r\n[6, 8, 3, 18, 9, 13, 17, 15, 16, 19, 10, 1, 12, 7, 0, 11, 4, 14, 2, 5],\r\n[9, 1, 8, 3, 0, 15, 12, 16, 18, 19, 11, 5, 6, 13, 10, 7, 14, 17, 4, 2],\r\n[0, 8, 5, 15, 1, 3, 16, 14, 19, 18, 7, 4, 12, 6, 11, 9, 17, 10, 13, 2],\r\n[11, 4, 8, 1, 19, 15, 6, 7, 9, 12, 0, 10, 5, 2, 14, 3, 17, 16, 13, 18],\r\n[2, 14, 3, 5, 6, 0, 18, 1, 15, 7, 16, 19, 10, 11, 4, 12, 13, 9, 8, 17],\r\n[19, 14, 5, 8, 4, 15, 11, 6, 13, 16, 7, 10, 12, 1, 3, 9, 0, 17, 18, 2],\r\n[6, 12, 2, 3, 8, 5, 4, 18, 10, 13, 19, 0, 17, 11, 1, 9, 15, 16, 7, 14],\r\n[7, 15, 5, 10, 2, 19, 16, 0, 11, 12, 3, 17, 13, 8, 1, 14, 4, 18, 6, 9],\r\n[8, 13, 12, 1, 16, 7, 10, 3, 2, 19, 6, 0, 9, 5, 18, 14, 4, 15, 17, 11],\r\n[18, 5, 1, 13, 9, 12, 0, 11, 2, 17, 15, 7, 3, 6, 16, 14, 19, 8, 4, 10],\r\n[4, 0, 7, 9, 15, 16, 5, 17, 11, 1, 6, 14, 13, 18, 2, 19, 8, 3, 10, 12],\r\n[4, 19, 8, 11, 5, 13, 10, 14, 3, 15, 12, 17, 1, 7, 16, 6, 18, 2, 9, 0],\r\n[5, 12, 7, 1, 15, 0, 3, 13, 19, 16, 2, 14, 4, 9, 18, 6, 8, 11, 17, 10],\r\n[3, 0, 15, 8, 19, 7, 6, 4, 13, 16, 12, 5, 17, 1, 10, 9, 11, 18, 14, 2],\r\n[15, 8, 19, 1, 11, 16, 4, 13, 5, 0, 14, 7, 12, 9, 17, 18, 10, 2, 3, 6],\r\n[1, 10, 6, 15, 2, 0, 18, 8, 12, 7, 11, 14, 9, 16, 4, 3, 5, 19, 13, 17],\r\n[15, 5, 14, 8, 9, 12, 3, 6, 0, 2, 19, 18, 7, 1, 4, 13, 10, 11, 17, 16],\r\n[17, 14, 2, 12, 18, 9, 7, 3, 16, 8, 11, 19, 0, 5, 6, 10, 1, 4, 15, 13],\r\n[11, 8, 16, 17, 4, 9, 7, 0, 15, 1, 13, 10, 5, 19, 3, 2, 18, 6, 14, 12],\r\n[3, 7, 1, 16, 9, 17, 18, 6, 4, 14, 12, 10, 19, 13, 15, 8, 11, 5, 2, 0],\r\n[5, 9, 18, 1, 19, 0, 6, 13, 17, 15, 12, 3, 16, 7, 4, 2, 10, 8, 14, 11],\r\n[17, 15, 4, 0, 12, 6, 3, 1, 7, 19, 13, 11, 10, 16, 5, 18, 14, 9, 8, 2],\r\n[8, 6, 2, 18, 16, 15, 0, 1, 3, 11, 12, 14, 13, 10, 7, 5, 9, 4, 19, 17],\r\n[8, 11, 18, 1, 16, 13, 0, 2, 12, 9, 5, 4, 7, 3, 15, 6, 17, 14, 10, 19],\r\n[9, 17, 10, 6, 19, 1, 12, 11, 4, 3, 5, 8, 2, 13, 18, 14, 0, 15, 16, 7],\r\n[15, 10, 17, 7, 9, 6, 5, 13, 8, 11, 4, 2, 3, 0, 14, 19, 12, 16, 1, 18],\r\n[18, 5, 14, 8, 12, 4, 9, 2, 3, 15, 7, 13, 0, 6, 19, 17, 16, 11, 1, 10],\r\n[17, 16, 10, 19, 8, 15, 3, 11, 9, 18, 0, 6, 5, 2, 13, 14, 1, 4, 12, 7],\r\n[6, 4, 1, 0, 18, 3, 12, 10, 14, 16, 9, 17, 19, 2, 15, 8, 11, 7, 13, 5],\r\n[2, 8, 12, 19, 1, 6, 9, 13, 14, 15, 0, 16, 5, 10, 11, 3, 7, 17, 18, 4],\r\n[3, 6, 11, 8, 2, 13, 16, 1, 15, 5, 9, 18, 14, 17, 4, 19, 7, 12, 0, 10],\r\n[1, 0, 18, 19, 3, 11, 12, 4, 2, 5, 8, 6, 13, 15, 10, 9, 7, 16, 14, 17],\r\n[3, 10, 6, 18, 0, 19, 2, 1, 14, 11, 15, 5, 17, 8, 16, 12, 4, 9, 13, 7],\r\n[14, 10, 5, 0, 3, 15, 17, 1, 19, 11, 4, 18, 7, 13, 16, 6, 12, 8, 2, 9],\r\n[0, 19, 3, 4, 10, 11, 8, 2, 12, 13, 9, 17, 6, 18, 1, 5, 14, 16, 7, 15],\r\n[9, 16, 5, 0, 3, 19, 8, 12, 17, 18, 7, 14, 13, 10, 6, 15, 11, 1, 4, 2],\r\n[9, 5, 4, 19, 0, 16, 7, 1, 11, 6, 14, 2, 13, 15, 18, 3, 8, 17, 10, 12],\r\n[19, 13, 2, 4, 6, 5, 18, 10, 11, 3, 9, 16, 8, 12, 1, 14, 17, 15, 7, 0],\r\n[2, 14, 6, 0, 12, 18, 7, 19, 4, 10, 11, 15, 5, 17, 3, 16, 13, 1, 9, 8],\r\n[9, 15, 14, 18, 3, 17, 6, 2, 12, 13, 16, 0, 19, 5, 11, 4, 7, 8, 10, 1],\r\n[9, 18, 10, 13, 15, 17, 8, 5, 4, 6, 1, 14, 0, 11, 3, 12, 7, 2, 16, 19],\r\n[1, 16, 8, 7, 14, 13, 19, 15, 5, 6, 2, 11, 10, 3, 12, 4, 18, 9, 0, 17],\r\n[14, 3, 17, 15, 8, 0, 12, 2, 7, 19, 4, 11, 6, 9, 16, 18, 5, 1, 10, 13],\r\n[3, 2, 6, 16, 17, 11, 18, 7, 5, 0, 1, 9, 13, 14, 4, 10, 19, 15, 8, 12],\r\n[15, 6, 5, 13, 0, 12, 1, 9, 3, 4, 16, 2, 7, 19, 8, 14, 17, 11, 18, 10],\r\n[6, 9, 15, 1, 13, 11, 0, 2, 7, 18, 10, 3, 5, 16, 4, 17, 19, 14, 12, 8],\r\n[16, 14, 2, 17, 11, 15, 12, 10, 3, 13, 0, 9, 18, 19, 6, 7, 8, 4, 5, 1],\r\n[16, 7, 14, 8, 11, 9, 12, 1, 15, 6, 10, 19, 2, 13, 18, 3, 0, 17, 4, 5],\r\n[19, 18, 9, 14, 12, 2, 15, 10, 6, 16, 13, 17, 8, 5, 4, 1, 7, 0, 3, 11],\r\n[14, 17, 16, 0, 11, 10, 12, 1, 5, 8, 19, 3, 13, 7, 6, 18, 2, 9, 15, 4],\r\n[16, 17, 4, 14, 6, 19, 12, 0, 15, 10, 5, 2, 7, 13, 11, 3, 9, 18, 1, 8]]\r\n\r\n\r\n\r\n\r\n\r\nlet frontImg = require(\"./img/Download Abstract Background for free.jfif\").default\r\n\r\nlet  itemsarr = array.map(item =>{\r\n    return { back : item.back , \r\n    style: {transform : item.style.transform} , \r\n    mathcNumber : item.mathcNumber , \r\n    id : item.id \r\n}\r\n})  \r\n\r\nconst Game = (props) => {\r\n    let randomNumberIndex = Math.floor(Math.random() * randomPatternArray.length)\r\n    let matchedItemStyle = \"rotateY(180deg)\"\r\n    let unmatchedItemStyle = \"rotateY(0)\"\r\n    let [RandomPattern , setRandomPattern] = useState(randomPatternArray[randomNumberIndex])\r\n    let [itemsArray , setitemsArray] = useState([...itemsarr])\r\n    let [clickedBlock , setclickedBlock] = useState([])\r\n    let [clickaccses , setaccses] = useState(false)\r\n    let userinfoRef = useRef()\r\n    let navigate = useNavigate();\r\n    let [pageaccses , setpageaccses] = useState(false)\r\n    let [time , settime] = useState(`01:00`)\r\n    let [passedGameTime , setpassedGameTime] = useState(0)\r\n    let [gameaccses , setgameaccses] = useState(true)\r\n    let [wrongtries , setwrongtries] = useState(0)\r\n    let [startingGame , setstartingGame] = useState(false)\r\n    let [matchedItemsNumber  ,setmatchedItemsNumber] = useState(0)\r\n    let [counterdownintervalID , setcounterdownintervalID] = useState(0) // setinterval return ID\r\n    let [displayUserLastResultBar , setdisplayUserLastResultBar] = useState(false)\r\n    let [userData , setuserData] = useState({})\r\n    let [userLastResultsaccses , setuserLastResultsaccses ] = useState(false)\r\n    let [passegGame , setpassegGame] = useState(false)\r\n    let [Users , setUsers] = useState([])\r\n    let [RetryBtnAccses , setRetryBtnAccses] = useState(false)\r\n   \r\n  \r\n    const Auth = getAuth()\r\n    const db = props.props\r\n    const databaseRef = collection(db , \"users\")\r\n\r\n\r\n\r\n    \r\n\r\n    useEffect(() =>{\r\n        getDocs(databaseRef).then(\r\n            (items) => {\r\n               setUsers([...items.docs])\r\n            }\r\n        )\r\n    },[])\r\n\r\n  \r\n    useEffect(() =>{\r\n        onAuthStateChanged(Auth , (user) =>{\r\n            if(user){\r\n                setpageaccses(false)\r\n            }else{\r\n                setpageaccses(true)\r\n            }\r\n        })\r\n    },[Auth])\r\n\r\n \r\n     \r\n  \r\n\r\n    useEffect(() =>{\r\n        onAuthStateChanged(Auth , (user) =>{\r\n           if(user){\r\n            getDocs(databaseRef).then(\r\n                (res) =>{\r\n                    res.docs.map((item) =>{\r\n                        if(user.email == item.data().Email){\r\n                            setuserData({...item.data()}) \r\n                        }\r\n                    })\r\n                }\r\n            )\r\n            }\r\n\r\n        })\r\n\r\n    }, [])\r\n\r\n  \r\n    useEffect(() =>{\r\n        if(userData.history && userData.history.length > 0){\r\n            setuserLastResultsaccses(true)\r\n        }\r\n    }, [userData])\r\n\r\n\r\n\r\n\r\n    useEffect(() =>{\r\n        if(time == \"finished\"){\r\n            setstartingGame(false)\r\n           onAuthStateChanged(Auth , (user) =>{\r\n            let userDataObject = doc(db , \"users\" , user.uid)   \r\n            let date = new Date()\r\n            let year = date.getFullYear()\r\n            let day = date.getUTCDate()\r\n            let month = date.getMonth()\r\n            let hours =  date.toLocaleString('en-US', { hour: 'numeric', hour12: true })\r\n            let minutes = date.getMinutes()\r\n            minutes = minutes < 10 ? \"0\" + minutes : minutes\r\n            let EndedGameResults = {\r\n                passedGameTime : passedGameTime + \"seconds\" , \r\n                wrongtries : wrongtries , \r\n                date : `${day}/${month}/${year}   ${hours.split(\" \")[0]}:${minutes} ${hours.split(\" \")[1]}`\r\n            }\r\n\r\n            if(passegGame){\r\n                if(!userData.history || userData.history.length == 0){\r\n                    console.log(\"sdf\")\r\n                    userData.history = []\r\n                    userData.history.push({...EndedGameResults})\r\n                }else{\r\n                    userData.history.push({...EndedGameResults})\r\n                }  \r\n            }else{\r\n                return false\r\n            }\r\n\r\n            setuserData({...userData})\r\n            setDoc(userDataObject, {...userData})\r\n            setwrongtries(0)\r\n           })\r\n           setRetryBtnAccses(true)\r\n        }\r\n    }, [time])\r\n\r\n\r\n  \r\n\r\n\r\n    useEffect(() =>{ \r\n        if(startingGame){\r\n        let counter = 60\r\n        setTimeout(() => {\r\n            settime(counter)\r\n        }, 1000);\r\n    \r\n       let interval =  setInterval(() => {\r\n            counter--\r\n            if(counter < 10){\r\n                settime(\"00\" + \":\" + \"0\" + `${counter}`)\r\n            }else{\r\n                settime(\"00\" + \":\" + `${counter}`) \r\n            }\r\n            \r\n           if(counter < 1){\r\n                alert(\"game end\")\r\n                setpassedGameTime(60 - time.split(\":\")[1])\r\n                settime(\"finished\")\r\n                setaccses(true)\r\n                clearInterval(interval)\r\n            }\r\n        }, 1000);\r\n        setcounterdownintervalID(interval)\r\n        return () => clearInterval(interval)\r\n    }\r\n    },[startingGame])\r\n\r\n\r\n    useEffect(() =>{\r\n        onAuthStateChanged(Auth , (user) =>{\r\n            if(user){\r\n                setpageaccses(false)\r\n            \r\n            }else{\r\n                setpageaccses(true)\r\n            }\r\n        })\r\n    } , [Auth])\r\n\r\n   \r\n \r\n\r\n    useEffect(() =>{\r\n       onAuthStateChanged(Auth , (user) =>{\r\n           if(user && userinfoRef.current){\r\n        let userId = user.uid\r\n        let userObject = doc(db , \"users\" , userId)\r\n        getDoc(userObject).then(\r\n            (res) => {\r\n                userinfoRef.current.innerHTML   = res.data().Name\r\n            })\r\n        }\r\n       })    \r\n     \r\n    },[userinfoRef])\r\n    \r\n\r\n    let flipFunc = (e)=>{\r\n   itemsArray.find((item) =>{\r\n            if(e.target.closest(\".block\").id == item.id){\r\n                item.style.transform = matchedItemStyle\r\n            } \r\n        })\r\n        \r\n        setitemsArray([...itemsArray])\r\n    }  \r\n\r\n\r\n  \r\n\r\n    let clickedItems = (e)=>{\r\n     \r\n\r\n     let item = itemsArray.find((item) =>{\r\n          return  e.target.closest(\".block\").id == item.id\r\n        })\r\n        clickedBlock.push({\r\n            ItemElement : e.target.closest(\".block\") ,\r\n            mathcNumber : item.mathcNumber , \r\n            id : item.id\r\n        })\r\n        let firstClickedElem = clickedBlock[0]\r\n\r\n        firstClickedElem.ItemElement.style.pointerEvents = \"none\"   \r\n\r\n        let secondClickedElem = clickedBlock[1]\r\n        \r\n\r\n\r\n\r\n        if(clickedBlock.length == 2){\r\n            if(firstClickedElem.mathcNumber == secondClickedElem.mathcNumber){\r\n                firstClickedElem.ItemElement.style.pointerEvents = \"none\"    \r\n                secondClickedElem.ItemElement.style.pointerEvents = \"none\"   \r\n                clickedBlock.length = 0\r\n                setmatchedItemsNumber((prev) => prev + 2)\r\n                if(matchedItemsNumber == array.length - 2){\r\n                    alert(`you passed the game at ${60 - time.split(\":\")[1]} seconds and your wrong tries is ${wrongtries}`)\r\n                    clearInterval(counterdownintervalID)\r\n                    setpassedGameTime(60 - time.split(\":\")[1])\r\n                    setpassegGame(true)\r\n                    settime(\"finished\")\r\n                    setaccses(true)\r\n                }\r\n            }else{\r\n                firstClickedElem.ItemElement.style.pointerEvents = \"all\"    \r\n                secondClickedElem.ItemElement.style.pointerEvents = \"all\"   \r\n                clickedBlock.length = 0\r\n                setaccses(true)\r\n                setTimeout(() => {\r\n                  let items = itemsArray.map((item) =>{\r\n                    if(item.id == firstClickedElem.id)  {item.style.transform = unmatchedItemStyle}\r\n                    if(item.id == secondClickedElem.id)  {item.style.transform = unmatchedItemStyle}\r\n                     return item\r\n                })\r\n                setwrongtries((prev) => prev + 1)\r\n                setitemsArray([...items])\r\n                setaccses(false)\r\n              }, 500);  \r\n            }\r\n        }\r\n   }\r\n\r\n\r\n\r\n \r\n\r\n   let startPlay = () =>{\r\n    setgameaccses(false)\r\n    setTimeout(() => {\r\n     let arr = itemsArray.map((item) =>{\r\n            item.style.transform = matchedItemStyle\r\n            return item\r\n        })\r\n        setitemsArray([...arr])\r\n    }, 200);\r\n\r\nsetTimeout(() => {\r\n  let arr = itemsArray.map((item) =>{\r\n        item.style.transform = unmatchedItemStyle\r\n        return item\r\n    })\r\n    setitemsArray([...arr])\r\n}, 1500);\r\n\r\n\r\nsetstartingGame(true) // start counter down\r\n    \r\n   }\r\n\r\n   let wrapperRef = useRef()\r\n  \r\n\r\n   let openLastResultUserBar = () =>{\r\n    setdisplayUserLastResultBar(true)\r\n   }\r\n   let closeLastResultUserBar = () =>{\r\n    setdisplayUserLastResultBar(false)\r\n   }\r\n\r\n   let RetryGame = async() =>{\r\n    let randomNumberIndex = Math.floor(Math.random() * randomPatternArray.length)\r\n    setRandomPattern(randomPatternArray[randomNumberIndex])\r\n    wrapperRef.current.childNodes.forEach(item =>{\r\n        item.style.pointerEvents = \"all\"\r\n      \r\n    })\r\n    setitemsArray([...array])\r\n    setTimeout(() => {\r\n        setTimeout(() => {\r\n            setstartingGame(true)\r\n        }, 1500);\r\n        startPlay()\r\n        setaccses(false)\r\n        setwrongtries(0)\r\n    }, 500);\r\n    \r\n   }\r\n\r\n\r\n    return ( \r\n        <>\r\n  {!pageaccses && <div  className = \"container-wrapper\">\r\n \r\n  <div className = \"img\">\r\n          <img src = {require(\"./img/2488356.jpg\").default}></img>\r\n      </div>\r\n\r\n\r\n  { gameaccses &&  <div className = \"bg-wrapper\">\r\n            <button onClick = {startPlay} className = \"btn btn-danger\">Start</button>\r\n        </div>}\r\n     \r\n\r\n      {displayUserLastResultBar &&  <div  className = \"user-history-data\">\r\n            <div   className = \"wrapp\">\r\n            {!userLastResultsaccses && <div style={{position : \"absolute\" , left : \"50%\" , top : \"50%\" ,transform : \"translateX(-50%) translateY(-50%)\"}}> \r\n                <h3>there is no last time result </h3>\r\n                </div>}    \r\n        {userLastResultsaccses &&  <div className=\"user-info-data\" >\r\n                   <div>\r\n                       <h5>{userData.Name}</h5>\r\n                   </div>\r\n\r\n                   <div>\r\n                     <h5>{userData.Email}</h5>\r\n                   </div>\r\n                   </div>}\r\n\r\n            {userLastResultsaccses && \r\n          <div className=\"data-wrapper\">\r\n            {userData.history.map(item =>{\r\n              return  <div className=\"data\">\r\n                     <div className=\"user-last-result\">\r\n                        <h6>passed game time</h6>\r\n                        <div>{item.passedGameTime}</div>\r\n                        </div>\r\n     \r\n                        <div className=\"user-last-result\">\r\n                        <h6>wrong tries</h6>\r\n                         <div>{item.wrongtries}</div>\r\n                        </div>\r\n     \r\n                        <div className=\"user-last-result\">\r\n                        <h6>Date</h6>\r\n                        <div>{item.date}</div>\r\n                        </div>\r\n                        </div>\r\n            })}\r\n            </div>\r\n            }\r\n      \r\n                <div onClick = {closeLastResultUserBar} className = \"close\">\r\n                <button className = \"btn\">\r\n                    <img src={require(\"./img/cross.png\").default}></img>\r\n                </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n}\r\n\r\n  \r\n   <div className=\"ui-wrapper\">\r\n      \r\n    <div className = \"sidebar \">\r\n        <div className=\"wrapp\">\r\n        <div  className = \"user-info\">\r\n        <div className = \"userimg\">\r\n                <img src = {require(\"./img/user.png\").default}></img>\r\n            </div>\r\n            <div ref={userinfoRef} className = \"username\"></div>\r\n        </div>\r\n\r\n        <div className = \"users-history-btn-control\">\r\n            <button onClick={() => openLastResultUserBar()} className = \"btn history-btn-control\">my last result</button>\r\n        </div>\r\n\r\n        <div className = \"signout\">\r\n        <button onClick = {() => {\r\n            signOut(Auth)\r\n            navigate(\"/\")\r\n            }} className=\" btn btn-primary sinOut\">SignOut</button>\r\n        </div>\r\n        </div>\r\n            </div>\r\n\r\n    \r\n\r\n       <div className=\"game-data-wrapper \">\r\n\r\n     \r\n\r\n    <div className=\"wrapp\">\r\n   \r\n    {RetryBtnAccses && <div className=\"Retry-btn\">\r\n          <button  onClick={() =>{\r\n              setRetryBtnAccses(false)\r\n              RetryGame()\r\n          }} className=\"btn btn-danger retry\">Retry</button>\r\n      </div>\r\n}\r\n\r\n       <div className = \"game-data\">\r\n            <div className = \"counter-down\">time : {time} </div>\r\n            <div className = \"wrong-tries\">wrong tries : {wrongtries} </div>\r\n        </div>\r\n\r\n\r\n        <div ref={wrapperRef} className=\"wrapper\">\r\n\r\n        {RandomPattern.map((item) =>{\r\n            return <div   style={{transform : itemsArray[item].style.transform}} id = {itemsArray[item].id} key={itemsArray[item].id} className = \"block\" mathcnumber={itemsArray[item].mathcNumber} onClick = {(e) => { \r\n                if(clickaccses){\r\n                    e.preventDefault()\r\n                }else{\r\n                    flipFunc(e)\r\n                    setTimeout(() => {\r\n                        clickedItems(e)\r\n                    }, 200);\r\n                }\r\n               \r\n            }} >\r\n                <div className = \"face back\">\r\n                    <img  src={require(`${itemsArray[item].back}`).default}></img>\r\n                </div>\r\n                <div className = \"face front\">\r\n                    <img  src={`${frontImg}`}></img>\r\n                </div>\r\n            </div>\r\n        })}\r\n        </div>\r\n        </div>\r\n       </div>\r\n\r\n \r\n</div>\r\n\r\n\r\n     </div>} \r\n     \r\n     {pageaccses && <div className = \"not-found\">\r\n         \r\n        <p>please login to start playing the game </p>\r\n        <button onClick = {() => navigate(\"/\")} className = \"btn btn-primary\">Return to home page</button>\r\n         \r\n         </div>} \r\n       \r\n        </>\r\n     );\r\n}\r\n\r\nexport default Game;","C:\\Users\\pc\\Desktop\\memory game\\src\\Home.js",["76","77"],"import { useNavigate } from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { onAuthStateChanged } from '@firebase/auth';\r\nimport { getAuth } from '@firebase/auth';\r\n\r\n \r\n\r\n  const HomePage = () => {\r\n    let [pageaccses , setpageaccses] = useState(true)\r\n\r\n    let navigate = useNavigate();\r\n    const Auth = getAuth()\r\n\r\n    useEffect(() =>{\r\n      onAuthStateChanged(Auth , (user) =>{\r\n        if(user){\r\n          setpageaccses(false)\r\n          navigate(\"/game\")\r\n    \r\n        }\r\n       \r\n      })\r\n\r\n     return () =>  setpageaccses(false)\r\n    },[])\r\n   \r\n    \r\n\r\n      return ( \r\n          <>\r\n  <div className='header'>\r\n    <h2>Memory Game</h2>\r\n  </div>\r\n          {pageaccses &&\r\n          <div className = \"Home-wrapper\">\r\n        <div className = \"img\">\r\n          <img src = {require(\"./img/2449640.jpg\").default}></img>\r\n        </div>\r\n        \r\n        <div className = \"buttons\">\r\n          <button onClick = {() =>navigate(\"login\") } className = \"btn btn-primary\">Login</button>\r\n          <button onClick = {() =>navigate(\"signup\") } className = \"btn btn-primary\">SignUp</button>\r\n        </div>\r\n          </div>\r\n  }\r\n         \r\n          \r\n          </>\r\n       );\r\n  }\r\n   \r\n  export default HomePage;","C:\\Users\\pc\\Desktop\\memory game\\src\\login.js",["78","79","80","81","82","83"],"import {Form} from \"react-bootstrap\"\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useRef, useState } from \"react\"\r\nimport {Button} from \"react-bootstrap\"\r\nimport { setDoc , doc } from \"@firebase/firestore\"\r\nimport {getAuth , signInWithEmailAndPassword } from \"firebase/auth\"\r\nimport { onAuthStateChanged } from '@firebase/auth';\r\nimport { useEffect } from \"react\";\r\nconst Login = (props) => {\r\n\r\n  const Auth = getAuth()\r\n  let navigate = useNavigate()\r\n  let EmailRef = useRef()\r\n  let PasswordRef = useRef()\r\n  let [Autherror , setautherror] = useState(false)\r\n  let [pageaccses , setpageaccses] = useState(true)\r\n  let [loading , setloading] = useState(false)\r\n\r\n  useEffect(() =>{\r\n    onAuthStateChanged(Auth , (user) =>{\r\n      if(user){\r\n        setpageaccses(false)\r\n      }\r\n    })\r\n\r\n    return () => setpageaccses(false)\r\n} , [])\r\n\r\n\r\n\r\n  let UserLogin = (e , email , password) =>{\r\n    setloading(true)\r\n    e.preventDefault()\r\n    if(email != \"\" &&  password != \"\"){\r\n      signInWithEmailAndPassword(Auth , email , password).then(\r\n        (res) => {\r\n          setautherror(false)\r\n          navigate(\"/game\")\r\n        }\r\n      ).catch(\r\n        (err) => {setautherror(true)\r\n          setloading(false)\r\n        }\r\n      )\r\n      email = \"\"\r\n      password = \"\"\r\n    }\r\n  }\r\n\r\n\r\n    return ( \r\n      <>\r\n      {pageaccses && \r\n    <div className=\"form login\">\r\n        <div className = \"img\">\r\n            <img src = {require(\"./img/2488408.jpg\").default}></img>\r\n        </div>\r\n        {Autherror && <div className = \"alert\">\r\n          the Email and password are incorrect\r\n          </div>}\r\n        <div className = \"form-style\">\r\n        <Form onSubmit = {(e) => UserLogin(e ,EmailRef.current.value , PasswordRef.current.value )}>\r\n  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n  <Form.Label>Email address</Form.Label>\r\n  <Form.Control ref = {EmailRef} type=\"email\" placeholder=\"Enter email\"  required/>\r\n  <Form.Text className=\"text-muted\">\r\n    We'll never share your email with anyone else.\r\n  </Form.Text>\r\n</Form.Group>\r\n\r\n<Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n  <Form.Label>Password</Form.Label>\r\n  <Form.Control ref = {PasswordRef} type=\"password\" placeholder=\"Password\" required/>\r\n</Form.Group>\r\n\r\n  {!loading && <Button variant=\"primary\" type=\"submit\">\r\n  Login\r\n  </Button>}\r\n  {loading && <button className=\"btn btn-primary\" >\r\n  loging in ...\r\n  </button>}\r\n</Form>\r\n        </div>\r\n    </div>\r\n}\r\n    </>\r\n     );\r\n}\r\n \r\nexport default Login;","C:\\Users\\pc\\Desktop\\memory game 2\\React-memory-Game\\src\\index.js",["84"],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport ReactDOMClient from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport \"./App.css\"\n\n\nconst root = ReactDOMClient.createRoot(document.getElementById('root'));\nroot.render(<App />);\n\n",["85","86"],"C:\\Users\\pc\\Desktop\\memory game 2\\React-memory-Game\\src\\App.js",["87","88","89","90","91","92","93","94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"100","severity":1,"message":"104","line":1,"column":28,"nodeType":"102","messageId":"103","endLine":1,"endColumn":34},{"ruleId":"100","severity":1,"message":"105","line":1,"column":36,"nodeType":"102","messageId":"103","endLine":1,"endColumn":44},{"ruleId":"100","severity":1,"message":"106","line":3,"column":35,"nodeType":"102","messageId":"103","endLine":3,"endColumn":41},{"ruleId":"100","severity":1,"message":"107","line":6,"column":50,"nodeType":"102","messageId":"103","endLine":6,"endColumn":54},{"ruleId":"100","severity":1,"message":"108","line":27,"column":9,"nodeType":"102","messageId":"103","endLine":27,"endColumn":12},{"ruleId":"100","severity":1,"message":"109","line":34,"column":9,"nodeType":"102","messageId":"103","endLine":34,"endColumn":13},{"ruleId":"110","severity":1,"message":"111","line":129,"column":4,"nodeType":"112","messageId":"113","endLine":129,"endColumn":5},{"ruleId":"100","severity":1,"message":"114","line":256,"column":25,"nodeType":"102","messageId":"103","endLine":256,"endColumn":40},{"ruleId":"100","severity":1,"message":"115","line":272,"column":10,"nodeType":"102","messageId":"103","endLine":272,"endColumn":15},{"ruleId":"116","severity":1,"message":"117","line":290,"column":7,"nodeType":"118","endLine":290,"endColumn":9,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":312,"column":41,"nodeType":"122","messageId":"123","endLine":312,"endColumn":43},{"ruleId":"124","severity":1,"message":"125","line":313,"column":39,"nodeType":"126","messageId":"127","endLine":313,"endColumn":41},{"ruleId":"116","severity":1,"message":"128","line":323,"column":8,"nodeType":"118","endLine":323,"endColumn":10,"suggestions":"129"},{"ruleId":"124","severity":1,"message":"125","line":336,"column":17,"nodeType":"126","messageId":"127","endLine":336,"endColumn":19},{"ruleId":"124","severity":1,"message":"125","line":354,"column":65,"nodeType":"126","messageId":"127","endLine":354,"endColumn":67},{"ruleId":"116","severity":1,"message":"130","line":371,"column":8,"nodeType":"118","endLine":371,"endColumn":14,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":387,"column":30,"nodeType":"126","messageId":"134","endLine":387,"endColumn":31},{"ruleId":"132","severity":1,"message":"133","line":387,"column":36,"nodeType":"126","messageId":"134","endLine":387,"endColumn":37},{"ruleId":"132","severity":1,"message":"133","line":387,"column":42,"nodeType":"126","messageId":"134","endLine":387,"endColumn":43},{"ruleId":"132","severity":1,"message":"133","line":389,"column":30,"nodeType":"126","messageId":"134","endLine":389,"endColumn":31},{"ruleId":"132","severity":1,"message":"133","line":389,"column":36,"nodeType":"126","messageId":"134","endLine":389,"endColumn":37},{"ruleId":"116","severity":1,"message":"135","line":403,"column":7,"nodeType":"118","endLine":403,"endColumn":21,"suggestions":"136"},{"ruleId":"116","severity":1,"message":"137","line":432,"column":7,"nodeType":"118","endLine":432,"endColumn":20,"suggestions":"138"},{"ruleId":"120","severity":1,"message":"139","line":436,"column":27,"nodeType":"122","messageId":"123","endLine":436,"endColumn":29},{"ruleId":"124","severity":1,"message":"125","line":437,"column":46,"nodeType":"126","messageId":"127","endLine":437,"endColumn":48},{"ruleId":"124","severity":1,"message":"125","line":452,"column":49,"nodeType":"126","messageId":"127","endLine":452,"endColumn":51},{"ruleId":"124","severity":1,"message":"125","line":468,"column":32,"nodeType":"126","messageId":"127","endLine":468,"endColumn":34},{"ruleId":"124","severity":1,"message":"125","line":469,"column":45,"nodeType":"126","messageId":"127","endLine":469,"endColumn":47},{"ruleId":"124","severity":1,"message":"125","line":474,"column":39,"nodeType":"126","messageId":"127","endLine":474,"endColumn":41},{"ruleId":"124","severity":1,"message":"125","line":489,"column":32,"nodeType":"126","messageId":"127","endLine":489,"endColumn":34},{"ruleId":"124","severity":1,"message":"125","line":490,"column":32,"nodeType":"126","messageId":"127","endLine":490,"endColumn":34},{"ruleId":"140","severity":1,"message":"141","line":563,"column":11,"nodeType":"142","endLine":563,"endColumn":61},{"ruleId":"140","severity":1,"message":"141","line":612,"column":21,"nodeType":"142","endLine":612,"endColumn":67},{"ruleId":"140","severity":1,"message":"141","line":626,"column":17,"nodeType":"142","endLine":626,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":681,"column":21,"nodeType":"142","endLine":681,"endColumn":77},{"ruleId":"140","severity":1,"message":"141","line":684,"column":21,"nodeType":"142","endLine":684,"endColumn":47},{"ruleId":"116","severity":1,"message":"143","line":25,"column":7,"nodeType":"118","endLine":25,"endColumn":9,"suggestions":"144"},{"ruleId":"140","severity":1,"message":"141","line":37,"column":11,"nodeType":"142","endLine":37,"endColumn":61},{"ruleId":"100","severity":1,"message":"145","line":5,"column":10,"nodeType":"102","messageId":"103","endLine":5,"endColumn":16},{"ruleId":"100","severity":1,"message":"146","line":5,"column":19,"nodeType":"102","messageId":"103","endLine":5,"endColumn":22},{"ruleId":"116","severity":1,"message":"147","line":27,"column":5,"nodeType":"118","endLine":27,"endColumn":7,"suggestions":"148"},{"ruleId":"124","severity":1,"message":"149","line":34,"column":14,"nodeType":"126","messageId":"127","endLine":34,"endColumn":16},{"ruleId":"124","severity":1,"message":"149","line":34,"column":33,"nodeType":"126","messageId":"127","endLine":34,"endColumn":35},{"ruleId":"140","severity":1,"message":"141","line":56,"column":13,"nodeType":"142","endLine":56,"endColumn":63},{"ruleId":"100","severity":1,"message":"150","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":16},{"ruleId":"96","replacedBy":"151"},{"ruleId":"98","replacedBy":"152"},{"ruleId":"100","severity":1,"message":"145","line":3,"column":44,"nodeType":"102","messageId":"103","endLine":3,"endColumn":50},{"ruleId":"100","severity":1,"message":"153","line":3,"column":53,"nodeType":"102","messageId":"103","endLine":3,"endColumn":62},{"ruleId":"124","severity":1,"message":"125","line":90,"column":37,"nodeType":"126","messageId":"127","endLine":90,"endColumn":39},{"ruleId":"116","severity":1,"message":"154","line":138,"column":3,"nodeType":"118","endLine":138,"endColumn":20,"suggestions":"155"},{"ruleId":"116","severity":1,"message":"156","line":164,"column":3,"nodeType":"118","endLine":164,"endColumn":11,"suggestions":"157"},{"ruleId":"124","severity":1,"message":"125","line":175,"column":69,"nodeType":"126","messageId":"127","endLine":175,"endColumn":71},{"ruleId":"116","severity":1,"message":"158","line":193,"column":3,"nodeType":"118","endLine":193,"endColumn":18,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":206,"column":254,"nodeType":"162","messageId":"127","endLine":206,"endColumn":261},{"ruleId":"124","severity":1,"message":"125","line":215,"column":15,"nodeType":"126","messageId":"127","endLine":215,"endColumn":17},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useState' is defined but never used.","'addDoc' is defined but never used.","'Link' is defined but never used.","'app' is assigned a value but never used.","'Auth' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'setclickedBlock' is assigned a value but never used.","'Users' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'databaseRef'. Either include it or remove the dependency array.","ArrayExpression",["165"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'Auth' and 'databaseRef'. Either include them or remove the dependency array.",["166"],"React Hook useEffect has missing dependencies: 'Auth', 'db', 'passedGameTime', 'passegGame', 'userData', and 'wrongtries'. Either include them or remove the dependency array. You can also do a functional update 'setuserData(u => ...)' if you only need 'userData' in the 'setuserData' call.",["167"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has a missing dependency: 'time'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setpassedGameTime' needs the current value of 'time'.",["168"],"React Hook useEffect has missing dependencies: 'Auth' and 'db'. Either include them or remove the dependency array.",["169"],"Array.prototype.find() expects a return value from arrow function.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'Auth' and 'navigate'. Either include them or remove the dependency array.",["170"],"'setDoc' is defined but never used.","'doc' is defined but never used.","React Hook useEffect has a missing dependency: 'Auth'. Either include it or remove the dependency array.",["171"],"Expected '!==' and instead saw '!='.","'ReactDOM' is defined but never used.",["163"],["164"],"'deleteDoc' is defined but never used.","React Hook useEffect has a missing dependency: 'SignUpWithEmailAndPassword'. Either include it or remove the dependency array.",["172"],"React Hook useEffect has a missing dependency: 'Authenticated'. Either include it or remove the dependency array.",["173"],"React Hook useEffect has a missing dependency: 'IsUserOnline'. Either include it or remove the dependency array.",["174"],"no-dupe-keys","Duplicate key 'Usersdb'.","ObjectExpression","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [databaseRef]",{"range":"195","text":"196"},"Update the dependencies array to be: [Auth, databaseRef]",{"range":"197","text":"198"},"Update the dependencies array to be: [Auth, db, passedGameTime, passegGame, time, userData, wrongtries]",{"range":"199","text":"200"},"Update the dependencies array to be: [startingGame, time]",{"range":"201","text":"202"},"Update the dependencies array to be: [Auth, db, userinfoRef]",{"range":"203","text":"204"},"Update the dependencies array to be: [Auth, navigate]",{"range":"205","text":"206"},"Update the dependencies array to be: [Auth]",{"range":"207","text":"208"},"Update the dependencies array to be: [RefreshUserData, SignUpWithEmailAndPassword]",{"range":"209","text":"210"},"Update the dependencies array to be: [Authenticated, userId]",{"range":"211","text":"212"},"Update the dependencies array to be: [Authenticated, IsUserOnline]",{"range":"213","text":"214"},[13014,13016],"[databaseRef]",[13718,13720],"[Auth, databaseRef]",[15349,15355],"[Auth, db, passedGameTime, passegGame, time, userData, wrongtries]",[16159,16173],"[startingGame, time]",[16812,16825],"[Auth, db, userinfoRef]",[587,589],"[Auth, navigate]",[851,853],"[Auth]",[4295,4312],"[RefreshUserData, SignUpWithEmailAndPassword]",[4862,4870],"[Authenticated, userId]",[5579,5594],"[Authenticated, IsUserOnline]"]